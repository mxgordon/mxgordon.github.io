name: Release to Github Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  Github-Pages-Release:

    timeout-minutes: 10

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4 # repo checkout

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: stable
          target: wasm32-unknown-unknown

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.2.1
        with:
          cache-on-failure: true

      - name: Setup Dioxus Cli
        run: |
          cargo install
          cargo install dioxus-cli

      - name: Build with Dioxus CLI
        run: |
          dx bundle --out-dir prod
          mv prod/public/* prod
          cp prod/index.html prod/404.html

      - name: "Copy CNAME into /prod"
        run: cp CNAME prod/

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true
          # token:

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v4
        with:
          # Upload prod dir
          path: './prod'

      - name: Deploy to GitHub Pages ðŸš€
        id: deployment
        uses: actions/deploy-pages@v3




#  deploy:
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Setup TailwindCSS Cli
#        run: npm -g install tailwindcss
#
#        #  - name: Run TailwindCSS Compiler
#        #    run: npx tailwind -c tailwind.config.js -o src/index.css --minify
#
#
#      - name: Upload
#        uses: actions/upload-pages-artifact@v1.0.4
#        with:
#          path: dist
#
#      - id: deploy
#        name: Deploy to GitHub Pages
#        uses: actions/deploy-pages@v1
#        with:
#          token: ${{ github.token }}